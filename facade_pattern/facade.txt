Facade is a structural design pattern that provides a simplified (but limited) interface to a complex system of classes,
library or framework. While Facade decreases the overall complexity of the application, it also helps to move unwanted
dependencies to one place.


Advantages
Isolation: We can easily isolate our code from the complexity of a subsystem.
Testing Process: Using Facade Method makes the process of testing comparatively easy since it has convenient methods for
common testing tasks.
Loose Coupling: Availability of loose coupling between the clients and the Subsystems.

Disadvantages:
Changes in Methods: As we know that in Facade method, subsequent methods are attached to Facade layer and any change in
subsequent method may bring change in Facade layer which is not favorable.
Costly process: It is not cheap to establish the Facade method in our application for the systemâ€™s reliability.
Violation of rules: There is always the fear of violation of the construction of the facade layer.

Applicability
Providing simple Interface: One of the most important application of Facade Method is that it is used whenever you want
to provide the simple interface to the complex sub-system
Division into layers: It is used when we want to provide a unique structure to a sub-system by dividing them into layers.
It also leads to loose coupling between the clients and the subsystem.